/*! For license information please see 1291.bundle.09a2c6cd1c25234ab6ed.js.LICENSE.txt */
"use strict";(self.webpackChunkframeworkbundle=self.webpackChunkframeworkbundle||[]).push([[1291],{71291:(e,t,a)=>{var r=a(64836),n=a(18698);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=r(a(56690)),i=r(a(89728)),l=r(a(61655)),p=r(a(94993)),u=r(a(73808)),s=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=n(e)&&"function"!=typeof e)return{default:e};var a=d(t);if(a&&a.has(e))return a.get(e);var r={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&Object.prototype.hasOwnProperty.call(e,i)){var l=o?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(r,i,l):r[i]=e[i]}return r.default=e,a&&a.set(e,r),r}(a(67294)),f=r(a(83298));function d(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,a=new WeakMap;return(d=function(e){return e?a:t})(e)}function c(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var a,r=(0,u.default)(e);if(t){var n=(0,u.default)(this).constructor;a=Reflect.construct(r,arguments,n)}else a=r.apply(this,arguments);return(0,p.default)(this,a)}}t.default=function(e){(0,l.default)(a,e);var t=c(a);function a(e){var r;return(0,o.default)(this,a),(r=t.call(this,e)).mapData=r.props.field.mapData||r.props.form.props.component.mapData,r.geoxName=r.props.field.geoxName||r.props.field.geoxName,r.geoyName=r.props.field.geoyName||r.props.field.geoyName,r.geoJsonName=r.props.field.geoJsonName||r.props.field.geoJsonName,r.state={initial:!0},r.props.parentNode.setAltDescription&&r.props.parentNode.setAltDescription(r.props.field.description),r}return(0,i.default)(a,[{key:"render",value:function(){var e=this;this.mapData.mapDiv="c4g_map";var t=null;this.state.initial||(t=s.default.createElement(f.default,{ref:function(t){e.props.form.mapControllerRef=t},mapData:this.mapData}));var a=null;this.props.field.label&&(a=s.default.createElement("span",{className:"field-description"},this.props.field.description));var r=null;return this.mapData.geopicker&&"frontend"===this.mapData.geopicker.type?r=s.default.createElement(s.default.Fragment,null,s.default.createElement("input",{type:"text",id:this.geoxName,name:this.geoxName,defaultValue:this.props.data[this.geoxName],disabled:!0}),s.default.createElement("input",{type:"text",id:this.geoyName,name:this.geoyName,defaultValue:this.props.data[this.geoyName],disabled:!0})):this.mapData.editor&&(r=s.default.createElement("input",{type:"text",id:this.geoJsonName,name:this.geoJsonName,defaultValue:this.props.data[this.geoJsonName]})),s.default.createElement(s.default.Fragment,null,s.default.createElement("div",{id:"c4g_map_"+this.mapData.mapId}),t,s.default.createElement("label",{htmlFor:""},this.props.field.label),r,a)}},{key:"componentDidMount",value:function(){this.state.initial&&this.setState({initial:!1})}}]),a}(s.Component)}}]);