/*! For license information please see 1439.bundle.4a9bf91883951e1e4ceb.js.LICENSE.txt */
"use strict";(self.webpackChunkframeworkbundle=self.webpackChunkframeworkbundle||[]).push([[1439],{1439:(e,t,a)=>{var n=a(24994),o=a(73738);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(17383)),i=n(a(34579)),s=n(a(28452)),l=n(a(63072)),u=n(a(29511)),c=function(e,t){if("function"==typeof WeakMap)var a=new WeakMap,n=new WeakMap;return function(e,t){if(!t&&e&&e.__esModule)return e;var r,i,s={__proto__:null,default:e};if(null===e||"object"!=o(e)&&"function"!=typeof e)return s;if(r=t?n:a){if(r.has(e))return r.get(e);r.set(e,s)}for(var l in e)"default"!==l&&{}.hasOwnProperty.call(e,l)&&((i=(r=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,l))&&(i.get||i.set)?r(s,l,i):s[l]=e[l]);return s}(e,t)}(a(96540));n(a(40961));function f(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(f=function(){return!!e})()}var p=c.default.lazy((function(){return Promise.all([a.e(4353),a.e(1484)]).then(a.bind(a,79146))}));t.default=function(e){function t(e){var a,n,o,i;return(0,r.default)(this,t),n=this,o=t,i=[e],o=(0,l.default)(o),(a=(0,s.default)(n,f()?Reflect.construct(o,i||[],(0,l.default)(n).constructor):o.apply(n,i))).state={initial:!0,showMap:!1},a.myRef=c.default.createRef(),a.mapData=a.props.field.asyncMapData?null:a.props.detail.props.component.mapData,a}return(0,u.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){var e=null,t=this.mapData;if(null!==t){t.mapDiv="c4g_map";var a=this.props.field.geoxField,n=this.props.field.geoyField;if(!this.state.initial){this.props.data[a],this.props.data[n];this.state.showMap&&(e=c.default.createElement(c.Suspense,{fallback:c.default.createElement("div",null,"loading...")},c.default.createElement(p,{mapData:t})));window.c4gMapsHooks=window.c4gMapsHooks||{},window.c4gMapsHooks.hook_layer=window.c4gMapsHooks.hook_layer||[],window.c4gMapsHooks.layer_loaded=window.c4gMapsHooks.layer_loaded||[],window.c4gMapsHooks.layer_loaded.push((function(e){var t=e.mapController.map;setTimeout((function(){t.updateSize(),t.render()}),1e3)}))}}return c.default.createElement("div",{className:"detail-field-map"+(this.props.field.class?" "+this.props.field.class:""),ref:this.myRef},c.default.createElement("div",{id:"c4g_map_"+(null!==t?t.mapId:0),className:"c4g_map"}),e)}},{key:"componentDidMount",value:function(){var e=this;this.state.initial&&(this.props.field.asyncMapData?fetch(this.props.field.asyncMapDataUrl).then((function(e){return e.json()})).then((function(t){e.mapData=t,e.setState({initial:!1})})):this.setState({initial:!1})),this.observer=new IntersectionObserver((function(t){t.forEach((function(t){t.intersectionRatio>0&&(e.observer.unobserve(e.myRef.current),e.setState({showMap:!0}))}))})),this.observer.observe(this.myRef.current)}},{key:"componentWillUnmount",value:function(){this.observer.unobserve(this.myRef.current)}}])}(c.Component)}}]);